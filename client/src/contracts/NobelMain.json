{
  "contractName": "NobelMain",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_litter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initial_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minting_allowance_per_call",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cool_down_time_per_mint",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_litterUri",
          "type": "string"
        }
      ],
      "name": "createNobelLitter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLittersContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "litter_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNobelsContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "nobel_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_checker",
          "type": "address"
        }
      ],
      "name": "getBalanceOfLitter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_checker",
          "type": "address"
        }
      ],
      "name": "getBalanceOfNobels",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_litter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initial_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minting_allowance_per_call\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cool_down_time_per_mint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_litterUri\",\"type\":\"string\"}],\"name\":\"createNobelLitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checker\",\"type\":\"address\"}],\"name\":\"getBalanceOfLitter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checker\",\"type\":\"address\"}],\"name\":\"getBalanceOfNobels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLittersContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"litter_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNobelsContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nobel_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelMain.sol\":\"NobelMain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelMain.sol\":{\"keccak256\":\"0x8488de6c1d22b78a5b9599aa48d23df70bb7719e8d7a47b84575c1b12803f79b\",\"urls\":[\"bzz-raw://92e8e1b648f6c68f32b33a433b496cf13677b15b8866ad10c3bb545ab61506e1\",\"dweb:/ipfs/QmWyhXdec8CxdpWHygTdvErzNKDNJUMvbvcJ9tQ9ifFVrA\"]},\"/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelToken.sol\":{\"keccak256\":\"0xd19e427ec9efdeedd27f33c8f5d3bdac65e4a97e72e13a16465a5fcf961a5172\",\"urls\":[\"bzz-raw://690f8a0674e9a45858d1f3e5dfea87479b525fecf10a4aa6e7dce332b1b84126\",\"dweb:/ipfs/QmTKxL5rkLW1HyQjG5ZBG4smE9apRsUUfYwxyZtFQgRfWS\"]},\"/E/Projects/BlockchainBootcamp/OpenNFT/contracts/OpenNFT.sol\":{\"keccak256\":\"0x9ffc675d3a275f337aed1d629dca10f87928f0170b1afc8846db64bd03bdcd1b\",\"urls\":[\"bzz-raw://6fd08481bfb9399848fa3f22ea318abdd9cacc181b0902c97ba60c05bb7d4099\",\"dweb:/ipfs/QmTPt5ez9FVnbNEcy4LDhq4P6esgs45V5PuMSYBJUxftry\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x0d616363c1a1e6f9f489303f94df0cbe606826ab4944d315c3801a07f9b8d4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://976cf80d02556929369fc98196c4082f204e44e682e20d3f65cc61b31e29bf76\",\"dweb:/ipfs/Qmeo1vvf7L3PLLDPNSVuVyirLB3FrCYKMFw3JZ7EXgC5YU\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x86b0abb859d38e6909101e8dce6fad76543cd1443788b049fd182379b42cb6e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b057ad3b90ede81cefcc6f46d08a55b1f3b0f89638e21499221fea2aed3304\",\"dweb:/ipfs/QmYwVSzxHm7pX5ANvWhJG1JUP64BL8VWnozfpeQQNwFtp3\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xca9e98786cd7d8060e08a9f5aaf6dbd7da9d51afe3232c06c5a49ea49490c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355eccc0746e3d44001d248077efece51418d44b226d27de33930ff03ebd8103\",\"dweb:/ipfs/QmcMZjhmDVuiF1AWLEnbUAzuq2RMZVQP1ChoZV63bU8EgE\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://379879e94763b61c652f914da987a603fb1fec35645a1d6b8022413cf1c3a467\",\"dweb:/ipfs/QmVkFoHVN6XWztbJDHrWfMCRPV4QsbFGj6QPZYeMjQRfhr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea28aa69470f0f5bb38095c59d2d68db03fc52faa5640de4486a188ecc168870\",\"dweb:/ipfs/QmdwRX791f2gdkxLfzQLcyx3ZLvSjGd2wdX8gXFi8sH2uW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004d6438038062004d648339818101604052810190620000379190620001f3565b600062000049620001af60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508282826040516200013990620001b7565b620001479392919062000270565b604051809103906000f08015801562000164573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200031f565b600033905090565b613d46806200101e83390190565b600081519050620001d681620002eb565b92915050565b600081519050620001ed8162000305565b92915050565b600080600080608085870312156200020a57600080fd5b60006200021a87828801620001c5565b94505060206200022d87828801620001dc565b93505060406200024087828801620001dc565b92505060606200025387828801620001dc565b91505092959194509250565b6200026a81620002e1565b82525050565b60006060820190506200028760008301866200025f565b6200029660208301856200025f565b620002a560408301846200025f565b949350505050565b6000620002ba82620002c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002f681620002ad565b81146200030257600080fd5b50565b6200031081620002e1565b81146200031c57600080fd5b50565b610cef806200032f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610103578063b1f35d6514610121578063e968095f1461013d578063f2fde38b1461016d57610088565b8063331c62f81461008d5780636a1f94b1146100ab578063715018a6146100c957806378a65fb1146100d3575b600080fd5b610095610189565b6040516100a291906109c0565b60405180910390f35b6100b36101b3565b6040516100c091906109c0565b60405180910390f35b6100d16101dd565b005b6100ed60048036038101906100e89190610867565b610317565b6040516100fa9190610a74565b60405180910390f35b61010b6103cb565b60405161011891906109c0565b60405180910390f35b61013b600480360381019061013691906108b9565b6103f4565b005b61015760048036038101906101529190610867565b61055b565b6040516101649190610a74565b60405180910390f35b61018760048036038101906101829190610867565b61060f565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101e56107b8565b73ffffffffffffffffffffffffffffffffffffffff166102036103cb565b73ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090610a54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161037491906109c0565b60206040518083038186803b15801561038c57600080fd5b505afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c491906108fa565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a561403333846040518363ffffffff1660e01b81526004016104539291906109db565b602060405180830381600087803b15801561046d57600080fd5b505af1158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a591906108fa565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610504929190610a0b565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610890565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016105b891906109c0565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060891906108fa565b9050919050565b6106176107b8565b73ffffffffffffffffffffffffffffffffffffffff166106356103cb565b73ffffffffffffffffffffffffffffffffffffffff161461068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610a54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f290610a34565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60006107d36107ce84610ab4565b610a8f565b9050828152602081018484840111156107eb57600080fd5b6107f6848285610b49565b509392505050565b60008135905061080d81610c74565b92915050565b60008151905061082281610c8b565b92915050565b600082601f83011261083957600080fd5b81356108498482602086016107c0565b91505092915050565b60008151905061086181610ca2565b92915050565b60006020828403121561087957600080fd5b6000610887848285016107fe565b91505092915050565b6000602082840312156108a257600080fd5b60006108b084828501610813565b91505092915050565b6000602082840312156108cb57600080fd5b600082013567ffffffffffffffff8111156108e557600080fd5b6108f184828501610828565b91505092915050565b60006020828403121561090c57600080fd5b600061091a84828501610852565b91505092915050565b61092c81610b01565b82525050565b600061093d82610ae5565b6109478185610af0565b9350610957818560208601610b58565b61096081610beb565b840191505092915050565b6000610978602683610af0565b915061098382610bfc565b604082019050919050565b600061099b602083610af0565b91506109a682610c4b565b602082019050919050565b6109ba81610b3f565b82525050565b60006020820190506109d56000830184610923565b92915050565b60006040820190506109f06000830185610923565b8181036020830152610a028184610932565b90509392505050565b6000604082019050610a206000830185610923565b610a2d60208301846109b1565b9392505050565b60006020820190508181036000830152610a4d8161096b565b9050919050565b60006020820190508181036000830152610a6d8161098e565b9050919050565b6000602082019050610a8960008301846109b1565b92915050565b6000610a99610aaa565b9050610aa58282610b8b565b919050565b6000604051905090565b600067ffffffffffffffff821115610acf57610ace610bbc565b5b610ad882610beb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b0c82610b1f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b76578082015181840152602081019050610b5b565b83811115610b85576000848401525b50505050565b610b9482610beb565b810181811067ffffffffffffffff82111715610bb357610bb2610bbc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610c7d81610b01565b8114610c8857600080fd5b50565b610c9481610b13565b8114610c9f57600080fd5b50565b610cab81610b3f565b8114610cb657600080fd5b5056fea264697066735822122000b9daa9bad6c60cc405f83cc2407b39cb68a70357f12ed275c695a8fcda85a964736f6c6343000802003360806040526127106008556143806009553480156200001d57600080fd5b5060405162003d4638038062003d46833981810160405281019062000043919062000744565b6040518060400160405280600b81526020017f4e6f62656c20546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4254000000000000000000000000000000000000000000000000000000000081525081818160059080519060200190620000c99291906200067d565b508060069080519060200190620000e29291906200067d565b5050506000600760006101000a81548160ff021916908315150217905550620001246000801b62000118620001d860201b60201c565b620001e060201b60201c565b620001657f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a662000159620001d860201b60201c565b620001e060201b60201c565b620001a67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200019a620001d860201b60201c565b620001e060201b60201c565b5050620001ba33846200022860201b60201c565b816008819055508060098190555042600a81905550505050620009f8565b600033905090565b620001f782826200038e60201b62000f841760201c565b620002238160016000858152602001908152602001600020620003a460201b62000f921790919060201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029290620007f9565b60405180910390fd5b620002af60008383620003dc60201b60201c565b8060046000828254620002c391906200086b565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200031b91906200086b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200038291906200083d565b60405180910390a35050565b620003a08282620003f960201b60201c565b5050565b6000620003d4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620004ea60201b60201c565b905092915050565b620003f48383836200056460201b62000fc21760201c565b505050565b6200040b8282620005d460201b60201c565b620004e657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200048b620001d860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620004fe83836200063e60201b60201c565b620005595782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200055e565b600090505b92915050565b6200057c8383836200066160201b6200101a1760201c565b6200058c6200066660201b60201c565b15620005cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005c6906200081b565b60405180910390fd5b505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b505050565b6000600760009054906101000a900460ff16905090565b8280546200068b90620008d2565b90600052602060002090601f016020900481019282620006af5760008555620006fb565b82601f10620006ca57805160ff1916838001178555620006fb565b82800160010185558215620006fb579182015b82811115620006fa578251825591602001919060010190620006dd565b5b5090506200070a91906200070e565b5090565b5b80821115620007295760008160009055506001016200070f565b5090565b6000815190506200073e81620009de565b92915050565b6000806000606084860312156200075a57600080fd5b60006200076a868287016200072d565b93505060206200077d868287016200072d565b925050604062000790868287016200072d565b9150509250925092565b6000620007a9601f836200085a565b9150620007b68262000966565b602082019050919050565b6000620007d0602a836200085a565b9150620007dd826200098f565b604082019050919050565b620007f381620008c8565b82525050565b6000602082019050818103600083015262000814816200079a565b9050919050565b600060208201905081810360008301526200083681620007c1565b9050919050565b6000602082019050620008546000830184620007e8565b92915050565b600082825260208201905092915050565b60006200087882620008c8565b91506200088583620008c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620008bd57620008bc62000908565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620008eb57607f821691505b6020821081141562000902576200090162000937565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008201527f696c652070617573656400000000000000000000000000000000000000000000602082015250565b620009e981620008c8565b8114620009f557600080fd5b50565b61333e8062000a086000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806379cc67901161010f578063a9059cbb116100a2578063d539139311610071578063d5391393146105a8578063d547741f146105c6578063dd62ed3e146105e2578063e63ab1e914610612576101e5565b8063a9059cbb1461050c578063aecfe5051461053c578063ca15c8731461055a578063d2cdaf381461058a576101e5565b806395d89b41116100de57806395d89b4114610482578063a217fddf146104a0578063a457c2d7146104be578063a606fb59146104ee576101e5565b806379cc6790146103fc5780638456cb59146104185780639010d07c1461042257806391d1485414610452576101e5565b8063313ce5671161018757806340c10f191161015657806340c10f191461037657806342966c68146103925780635c975abb146103ae57806370a08231146103cc576101e5565b8063313ce5671461030257806336568abe14610320578063395093511461033c5780633f4ba83a1461036c576101e5565b806318160ddd116101c357806318160ddd1461026857806323b872dd14610286578063248a9ca3146102b65780632f2ff15d146102e6576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063095ea7b314610238575b600080fd5b61020460048036038101906101ff91906122a2565b610630565b60405161021191906126b8565b60405180910390f35b6102226106aa565b60405161022f91906126ee565b60405180910390f35b610252600480360381019061024d91906121c5565b61073c565b60405161025f91906126b8565b60405180910390f35b61027061075a565b60405161027d91906129f0565b60405180910390f35b6102a0600480360381019061029b9190612176565b610764565b6040516102ad91906126b8565b60405180910390f35b6102d060048036038101906102cb9190612201565b610865565b6040516102dd91906126d3565b60405180910390f35b61030060048036038101906102fb919061222a565b610884565b005b61030a6108b8565b6040516103179190612a0b565b60405180910390f35b61033a6004803603810190610335919061222a565b6108bd565b005b610356600480360381019061035191906121c5565b6108f1565b60405161036391906126b8565b60405180910390f35b61037461099d565b005b610390600480360381019061038b91906121c5565b610a17565b005b6103ac60048036038101906103a791906122cb565b610a95565b005b6103b6610aa9565b6040516103c391906126b8565b60405180910390f35b6103e660048036038101906103e19190612111565b610ac0565b6040516103f391906129f0565b60405180910390f35b610416600480360381019061041191906121c5565b610b09565b005b610420610b8d565b005b61043c60048036038101906104379190612266565b610c07565b604051610449919061269d565b60405180910390f35b61046c6004803603810190610467919061222a565b610c36565b60405161047991906126b8565b60405180910390f35b61048a610ca0565b60405161049791906126ee565b60405180910390f35b6104a8610d32565b6040516104b591906126d3565b60405180910390f35b6104d860048036038101906104d391906121c5565b610d39565b6040516104e591906126b8565b60405180910390f35b6104f6610e2d565b60405161050391906129f0565b60405180910390f35b610526600480360381019061052191906121c5565b610e33565b60405161053391906126b8565b60405180910390f35b610544610e51565b60405161055191906129f0565b60405180910390f35b610574600480360381019061056f9190612201565b610e57565b60405161058191906129f0565b60405180910390f35b610592610e7b565b60405161059f91906129f0565b60405180910390f35b6105b0610e81565b6040516105bd91906126d3565b60405180910390f35b6105e060048036038101906105db919061222a565b610ea5565b005b6105fc60048036038101906105f7919061213a565b610ed9565b60405161060991906129f0565b60405180910390f35b61061a610f60565b60405161062791906126d3565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106a357506106a28261101f565b5b9050919050565b6060600580546106b990612b8a565b80601f01602080910402602001604051908101604052809291908181526020018280546106e590612b8a565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b5050505050905090565b6000610750610749611099565b84846110a1565b6001905092915050565b6000600454905090565b600061077184848461126c565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107bc611099565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390612890565b60405180910390fd5b61085985610848611099565b85846108549190612a98565b6110a1565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b61088e82826114ee565b6108b38160016000858152602001908152602001600020610f9290919063ffffffff16565b505050565b600090565b6108c78282611554565b6108ec81600160008581526020019081526020016000206115d790919063ffffffff16565b505050565b60006109936108fe611099565b84846003600061090c611099565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098e9190612a42565b6110a1565b6001905092915050565b6109ce7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109c9611099565b610c36565b610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a04906127b0565b60405180910390fd5b610a15611607565b565b610a487f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a43611099565b610c36565b610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7e906128b0565b60405180910390fd5b610a9182826116a9565b5050565b610aa6610aa0611099565b82611757565b50565b6000600760009054906101000a900460ff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610b1c83610b17611099565b610ed9565b905081811015610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b58906128d0565b60405180910390fd5b610b7e83610b6d611099565b8484610b799190612a98565b6110a1565b610b888383611757565b505050565b610bbe7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bb9611099565b610c36565b610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490612950565b60405180910390fd5b610c0561192d565b565b6000610c2e82600160008681526020019081526020016000206119d090919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060068054610caf90612b8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdb90612b8a565b8015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b5050505050905090565b6000801b81565b60008060036000610d48611099565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612970565b60405180910390fd5b610e22610e10611099565b858584610e1d9190612a98565b6110a1565b600191505092915050565b60095481565b6000610e47610e40611099565b848461126c565b6001905092915050565b60085481565b6000610e74600160008481526020019081526020016000206119ea565b9050919050565b600a5481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610eaf82826119ff565b610ed481600160008581526020019081526020016000206115d790919063ffffffff16565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610f8e8282611a65565b5050565b6000610fba836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b45565b905092915050565b610fcd83838361101a565b610fd5610aa9565b15611015576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100c906129d0565b60405180910390fd5b505050565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611092575061109182611bb5565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110890612930565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611181576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611178906127f0565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161125f91906129f0565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d390612910565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612730565b60405180910390fd5b611357838383611c1f565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d590612830565b60405180910390fd5b81816113ea9190612a98565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461147c9190612a42565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114e091906129f0565b60405180910390a350505050565b6115076114fa83610865565b611502611099565b610c36565b611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612750565b60405180910390fd5b6115508282611a65565b5050565b61155c611099565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c090612990565b60405180910390fd5b6115d38282611c2f565b5050565b60006115ff836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d10565b905092915050565b61160f610aa9565b61164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164590612770565b60405180910390fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611692611099565b60405161169f919061269d565b60405180910390a1565b600954600a54426116ba9190612a98565b10156116fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f2906127d0565b60405180910390fd5b80600854811115611741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173890612810565b60405180910390fd5b42600a819055506117528383611e9a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117be906128f0565b60405180910390fd5b6117d382600083611c1f565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561185a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185190612790565b60405180910390fd5b81816118669190612a98565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008282546118bb9190612a98565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161192091906129f0565b60405180910390a3505050565b611935610aa9565b15611975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196c90612870565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119b9611099565b6040516119c6919061269d565b60405180910390a1565b60006119df8360000183611fef565b60001c905092915050565b60006119f882600001612089565b9050919050565b611a18611a0b83610865565b611a13611099565b610c36565b611a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4e90612850565b60405180910390fd5b611a618282611c2f565b5050565b611a6f8282610c36565b611b4157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611ae6611099565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000611b51838361209a565b611baa578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611baf565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611c2a838383610fc2565b505050565b611c398282610c36565b15611d0c57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611cb1611099565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611e8e576000600182611d429190612a98565b9050600060018660000180549050611d5a9190612a98565b90506000866000018281548110611d9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611de4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550600183611dff9190612a42565b8760010160008381526020019081526020016000208190555086600001805480611e52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611e94565b60009150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f01906129b0565b60405180910390fd5b611f1660008383611c1f565b8060046000828254611f289190612a42565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f7e9190612a42565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611fe391906129f0565b60405180910390a35050565b60008183600001805490501161203a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203190612710565b60405180910390fd5b826000018281548110612076577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000813590506120cc816132ac565b92915050565b6000813590506120e1816132c3565b92915050565b6000813590506120f6816132da565b92915050565b60008135905061210b816132f1565b92915050565b60006020828403121561212357600080fd5b6000612131848285016120bd565b91505092915050565b6000806040838503121561214d57600080fd5b600061215b858286016120bd565b925050602061216c858286016120bd565b9150509250929050565b60008060006060848603121561218b57600080fd5b6000612199868287016120bd565b93505060206121aa868287016120bd565b92505060406121bb868287016120fc565b9150509250925092565b600080604083850312156121d857600080fd5b60006121e6858286016120bd565b92505060206121f7858286016120fc565b9150509250929050565b60006020828403121561221357600080fd5b6000612221848285016120d2565b91505092915050565b6000806040838503121561223d57600080fd5b600061224b858286016120d2565b925050602061225c858286016120bd565b9150509250929050565b6000806040838503121561227957600080fd5b6000612287858286016120d2565b9250506020612298858286016120fc565b9150509250929050565b6000602082840312156122b457600080fd5b60006122c2848285016120e7565b91505092915050565b6000602082840312156122dd57600080fd5b60006122eb848285016120fc565b91505092915050565b6122fd81612acc565b82525050565b61230c81612ade565b82525050565b61231b81612aea565b82525050565b600061232c82612a26565b6123368185612a31565b9350612346818560208601612b57565b61234f81612c1a565b840191505092915050565b6000612367602283612a31565b915061237282612c2b565b604082019050919050565b600061238a602383612a31565b915061239582612c7a565b604082019050919050565b60006123ad602f83612a31565b91506123b882612cc9565b604082019050919050565b60006123d0601483612a31565b91506123db82612d18565b602082019050919050565b60006123f3602283612a31565b91506123fe82612d41565b604082019050919050565b6000612416603983612a31565b915061242182612d90565b604082019050919050565b6000612439602f83612a31565b915061244482612ddf565b604082019050919050565b600061245c602283612a31565b915061246782612e2e565b604082019050919050565b600061247f601f83612a31565b915061248a82612e7d565b602082019050919050565b60006124a2602683612a31565b91506124ad82612ea6565b604082019050919050565b60006124c5603083612a31565b91506124d082612ef5565b604082019050919050565b60006124e8601083612a31565b91506124f382612f44565b602082019050919050565b600061250b602883612a31565b915061251682612f6d565b604082019050919050565b600061252e603683612a31565b915061253982612fbc565b604082019050919050565b6000612551602483612a31565b915061255c8261300b565b604082019050919050565b6000612574602183612a31565b915061257f8261305a565b604082019050919050565b6000612597602583612a31565b91506125a2826130a9565b604082019050919050565b60006125ba602483612a31565b91506125c5826130f8565b604082019050919050565b60006125dd603783612a31565b91506125e882613147565b604082019050919050565b6000612600602583612a31565b915061260b82613196565b604082019050919050565b6000612623602f83612a31565b915061262e826131e5565b604082019050919050565b6000612646601f83612a31565b915061265182613234565b602082019050919050565b6000612669602a83612a31565b91506126748261325d565b604082019050919050565b61268881612b40565b82525050565b61269781612b4a565b82525050565b60006020820190506126b260008301846122f4565b92915050565b60006020820190506126cd6000830184612303565b92915050565b60006020820190506126e86000830184612312565b92915050565b600060208201905081810360008301526127088184612321565b905092915050565b600060208201905081810360008301526127298161235a565b9050919050565b600060208201905081810360008301526127498161237d565b9050919050565b60006020820190508181036000830152612769816123a0565b9050919050565b60006020820190508181036000830152612789816123c3565b9050919050565b600060208201905081810360008301526127a9816123e6565b9050919050565b600060208201905081810360008301526127c981612409565b9050919050565b600060208201905081810360008301526127e98161242c565b9050919050565b600060208201905081810360008301526128098161244f565b9050919050565b6000602082019050818103600083015261282981612472565b9050919050565b6000602082019050818103600083015261284981612495565b9050919050565b60006020820190508181036000830152612869816124b8565b9050919050565b60006020820190508181036000830152612889816124db565b9050919050565b600060208201905081810360008301526128a9816124fe565b9050919050565b600060208201905081810360008301526128c981612521565b9050919050565b600060208201905081810360008301526128e981612544565b9050919050565b6000602082019050818103600083015261290981612567565b9050919050565b600060208201905081810360008301526129298161258a565b9050919050565b60006020820190508181036000830152612949816125ad565b9050919050565b60006020820190508181036000830152612969816125d0565b9050919050565b60006020820190508181036000830152612989816125f3565b9050919050565b600060208201905081810360008301526129a981612616565b9050919050565b600060208201905081810360008301526129c981612639565b9050919050565b600060208201905081810360008301526129e98161265c565b9050919050565b6000602082019050612a05600083018461267f565b92915050565b6000602082019050612a20600083018461268e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612a4d82612b40565b9150612a5883612b40565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a8d57612a8c612bbc565b5b828201905092915050565b6000612aa382612b40565b9150612aae83612b40565b925082821015612ac157612ac0612bbc565b5b828203905092915050565b6000612ad782612b20565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612b75578082015181840152602081019050612b5a565b83811115612b84576000848401525b50505050565b60006002820490506001821680612ba257607f821691505b60208210811415612bb657612bb5612beb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f20756e706175736500000000000000602082015250565b7f43616e6e6f7420696e6372656173652074686520737570706c7920776974686f60008201527f757420636f6f6c696e6720646f776e0000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f43616e6e6f74206d696e74206d6f7265207468616e20616c6c6f77616e636500600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f7665206d696e74657220726f6c6520746f206d696e7400000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f207061757365000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008201527f696c652070617573656400000000000000000000000000000000000000000000602082015250565b6132b581612acc565b81146132c057600080fd5b50565b6132cc81612aea565b81146132d757600080fd5b50565b6132e381612af4565b81146132ee57600080fd5b50565b6132fa81612b40565b811461330557600080fd5b5056fea2646970667358221220a048691659bc53c05b216502cf630c67ac802a273fa6d732953211e220ea02fa64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610103578063b1f35d6514610121578063e968095f1461013d578063f2fde38b1461016d57610088565b8063331c62f81461008d5780636a1f94b1146100ab578063715018a6146100c957806378a65fb1146100d3575b600080fd5b610095610189565b6040516100a291906109c0565b60405180910390f35b6100b36101b3565b6040516100c091906109c0565b60405180910390f35b6100d16101dd565b005b6100ed60048036038101906100e89190610867565b610317565b6040516100fa9190610a74565b60405180910390f35b61010b6103cb565b60405161011891906109c0565b60405180910390f35b61013b600480360381019061013691906108b9565b6103f4565b005b61015760048036038101906101529190610867565b61055b565b6040516101649190610a74565b60405180910390f35b61018760048036038101906101829190610867565b61060f565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101e56107b8565b73ffffffffffffffffffffffffffffffffffffffff166102036103cb565b73ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090610a54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161037491906109c0565b60206040518083038186803b15801561038c57600080fd5b505afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c491906108fa565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a561403333846040518363ffffffff1660e01b81526004016104539291906109db565b602060405180830381600087803b15801561046d57600080fd5b505af1158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a591906108fa565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610504929190610a0b565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610890565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016105b891906109c0565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060891906108fa565b9050919050565b6106176107b8565b73ffffffffffffffffffffffffffffffffffffffff166106356103cb565b73ffffffffffffffffffffffffffffffffffffffff161461068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610a54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f290610a34565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60006107d36107ce84610ab4565b610a8f565b9050828152602081018484840111156107eb57600080fd5b6107f6848285610b49565b509392505050565b60008135905061080d81610c74565b92915050565b60008151905061082281610c8b565b92915050565b600082601f83011261083957600080fd5b81356108498482602086016107c0565b91505092915050565b60008151905061086181610ca2565b92915050565b60006020828403121561087957600080fd5b6000610887848285016107fe565b91505092915050565b6000602082840312156108a257600080fd5b60006108b084828501610813565b91505092915050565b6000602082840312156108cb57600080fd5b600082013567ffffffffffffffff8111156108e557600080fd5b6108f184828501610828565b91505092915050565b60006020828403121561090c57600080fd5b600061091a84828501610852565b91505092915050565b61092c81610b01565b82525050565b600061093d82610ae5565b6109478185610af0565b9350610957818560208601610b58565b61096081610beb565b840191505092915050565b6000610978602683610af0565b915061098382610bfc565b604082019050919050565b600061099b602083610af0565b91506109a682610c4b565b602082019050919050565b6109ba81610b3f565b82525050565b60006020820190506109d56000830184610923565b92915050565b60006040820190506109f06000830185610923565b8181036020830152610a028184610932565b90509392505050565b6000604082019050610a206000830185610923565b610a2d60208301846109b1565b9392505050565b60006020820190508181036000830152610a4d8161096b565b9050919050565b60006020820190508181036000830152610a6d8161098e565b9050919050565b6000602082019050610a8960008301846109b1565b92915050565b6000610a99610aaa565b9050610aa58282610b8b565b919050565b6000604051905090565b600067ffffffffffffffff821115610acf57610ace610bbc565b5b610ad882610beb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b0c82610b1f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b76578082015181840152602081019050610b5b565b83811115610b85576000848401525b50505050565b610b9482610beb565b810181811067ffffffffffffffff82111715610bb357610bb2610bbc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610c7d81610b01565b8114610c8857600080fd5b50565b610c9481610b13565b8114610c9f57600080fd5b50565b610cab81610b3f565b8114610cb657600080fd5b5056fea264697066735822122000b9daa9bad6c60cc405f83cc2407b39cb68a70357f12ed275c695a8fcda85a964736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2206:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:25",
                "type": ""
              }
            ],
            "src": "7:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:25",
                "type": ""
              }
            ],
            "src": "156:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "433:625:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "480:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "489:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "492:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "454:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "463:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "446:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "443:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "506:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "521:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "525:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "550:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "596:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "607:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "592:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "592:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "616:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "560:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "560:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "550:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "644:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "659:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "663:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "689:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "735:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "746:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "731:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "731:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "755:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "699:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "699:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "689:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "783:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "798:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "812:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "802:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "828:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "874:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "885:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "870:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "894:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "838:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "838:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "828:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "922:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "937:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "951:2:25",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "941:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "967:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1013:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1024:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1009:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1009:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "977:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "967:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "390:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "402:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "410:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "418:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "426:6:25",
                "type": ""
              }
            ],
            "src": "305:753:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1129:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1146:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1169:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1151:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1139:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1117:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1124:3:25",
                "type": ""
              }
            ],
            "src": "1064:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:288:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1352:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1364:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1352:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1445:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1456:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1441:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1441:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1388:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1388:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1513:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1526:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1537:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1522:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1522:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1469:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1469:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1595:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1608:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1619:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1604:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1551:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1551:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1298:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1310:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1318:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:25",
                "type": ""
              }
            ],
            "src": "1188:442:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1681:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1691:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1720:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1702:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1702:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1691:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1663:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1673:7:25",
                "type": ""
              }
            ],
            "src": "1636:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1783:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1793:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1808:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1815:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1804:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1793:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1765:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1775:7:25",
                "type": ""
              }
            ],
            "src": "1738:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1915:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1925:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1936:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1925:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1897:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1907:7:25",
                "type": ""
              }
            ],
            "src": "1870:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1996:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2053:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2062:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2065:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2055:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2055:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2055:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2019:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2044:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2026:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2026:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2016:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2016:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2009:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2006:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1989:5:25",
                "type": ""
              }
            ],
            "src": "1953:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2124:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2181:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2190:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2193:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2183:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2183:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2147:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2172:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2154:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2154:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2144:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2134:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2117:5:25",
                "type": ""
              }
            ],
            "src": "2081:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8817:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:261:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "168:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "126:41:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:25"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "110:15:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "192:5:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "185:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "230:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "226:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:25"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "219:3:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "280:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "292:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "261:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "275:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "254:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:25"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "329:3:25"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "334:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "339:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "305:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "305:41:25"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:25",
                "type": ""
              }
            ],
            "src": "7:345:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "442:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "429:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "420:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "485:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "458:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "458:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "458:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "388:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "396:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "404:5:25",
                "type": ""
              }
            ],
            "src": "358:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:77:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "588:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "582:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "628:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "604:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "604:30:25"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "541:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "549:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "557:5:25",
                "type": ""
              }
            ],
            "src": "503:137:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "722:211:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "780:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "783:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "773:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "773:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "773:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "750:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "746:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "746:17:25"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "765:3:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "732:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "796:34:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "823:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "810:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:20:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "800:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "839:88:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "900:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "908:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:17:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "915:6:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "923:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "848:47:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "848:79:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "839:5:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "700:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "708:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "716:5:25",
                "type": ""
              }
            ],
            "src": "660:273:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1002:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1012:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1012:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1070:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1043:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1043:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "980:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "988:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "996:5:25",
                "type": ""
              }
            ],
            "src": "939:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1209:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1196:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1167:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1164:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1226:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1241:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1245:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1270:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1305:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1316:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1301:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1301:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1325:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1280:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1270:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1124:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1135:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1147:6:25",
                "type": ""
              }
            ],
            "src": "1088:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1430:204:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1476:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1485:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1488:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1478:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1478:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1478:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1451:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1440:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1502:125:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1517:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1531:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1521:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1546:71:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1589:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1600:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1585:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1585:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1609:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1556:28:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1556:61:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1546:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1400:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1411:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1423:6:25",
                "type": ""
              }
            ],
            "src": "1356:278:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1716:299:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1762:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1771:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1774:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1764:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1764:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1764:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1737:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1746:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1733:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1733:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1758:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1729:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1729:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1726:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1788:220:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1803:45:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1834:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1845:1:25",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1830:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1830:17:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1817:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1817:31:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1807:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1895:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1904:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1907:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1897:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1897:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1897:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1867:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1875:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1864:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "1861:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1925:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1970:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1981:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1966:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1935:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1935:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1925:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1686:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1697:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1709:6:25",
                "type": ""
              }
            ],
            "src": "1640:375:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2098:207:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2144:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2153:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2156:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2146:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2146:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2146:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2119:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2128:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2115:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2140:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2111:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2108:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2170:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2185:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2189:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2214:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2260:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2271:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2280:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2224:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2224:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2214:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2068:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2079:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2091:6:25",
                "type": ""
              }
            ],
            "src": "2021:284:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2376:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2393:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2416:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2398:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2386:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2386:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2364:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2371:3:25",
                "type": ""
              }
            ],
            "src": "2311:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2527:272:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2537:53:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2584:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2551:32:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:39:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2541:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2599:78:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2665:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2670:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2606:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2606:71:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2599:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2712:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2719:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2708:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2708:16:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2726:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2731:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2686:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2686:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2747:46:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2758:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2785:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2763:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:29:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2754:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2754:39:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2747:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2508:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2515:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2523:3:25",
                "type": ""
              }
            ],
            "src": "2435:364:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2951:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2961:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3027:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3032:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2968:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2968:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2961:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3133:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "3044:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3146:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3157:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3162:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3153:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3153:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3146:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2939:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2947:3:25",
                "type": ""
              }
            ],
            "src": "2805:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3323:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3333:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3399:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3404:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3340:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3333:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3505:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "3416:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3518:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3529:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3534:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3525:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3525:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3518:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3311:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3319:3:25",
                "type": ""
              }
            ],
            "src": "3177:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3631:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3654:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3636:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3636:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3624:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3624:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3602:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3609:3:25",
                "type": ""
              }
            ],
            "src": "3549:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3771:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3781:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3793:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3804:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3789:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3781:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3861:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3874:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3885:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3870:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3870:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3817:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3817:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3817:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3743:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3755:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3766:4:25",
                "type": ""
              }
            ],
            "src": "3673:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4047:277:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4057:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4069:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4080:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4065:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4065:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4057:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4137:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4150:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4161:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4146:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4146:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4093:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4093:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4093:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4185:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4196:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4181:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4205:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4211:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4201:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4201:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4174:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4174:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4231:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4303:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4312:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4239:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4231:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4011:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4023:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4031:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4042:4:25",
                "type": ""
              }
            ],
            "src": "3901:423:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4456:206:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4466:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4478:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4474:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4466:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4546:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4559:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4570:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4555:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4555:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4502:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4502:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4502:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4627:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4651:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4636:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4583:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4583:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4583:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4420:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4432:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4440:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4451:4:25",
                "type": ""
              }
            ],
            "src": "4330:332:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4839:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4849:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4861:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4872:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4857:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4857:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4849:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4896:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4907:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4892:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4915:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4921:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4911:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4885:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4885:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4941:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5075:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4949:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4949:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4941:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4819:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4834:4:25",
                "type": ""
              }
            ],
            "src": "4668:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5264:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5274:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5286:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5297:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5282:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5282:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5274:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5321:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5332:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5317:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5317:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5340:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5346:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5336:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5336:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5310:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5310:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5310:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5366:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5500:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5374:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5366:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5244:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5259:4:25",
                "type": ""
              }
            ],
            "src": "5093:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5616:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5626:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5638:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5649:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5634:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5634:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5626:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5706:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5719:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5730:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5715:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5715:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5662:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5662:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5662:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5588:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5600:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5611:4:25",
                "type": ""
              }
            ],
            "src": "5518:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5787:88:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5797:30:25",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5807:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5807:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5797:6:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5856:6:25"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5864:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5836:19:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5836:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5836:33:25"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5771:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5780:6:25",
                "type": ""
              }
            ],
            "src": "5746:129:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5921:35:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5931:19:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5947:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5941:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5941:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5931:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5914:6:25",
                "type": ""
              }
            ],
            "src": "5881:75:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6029:241:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6134:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6136:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6136:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6136:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6106:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6114:18:25",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6103:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6103:30:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6100:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6166:37:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6196:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6174:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6174:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6166:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6240:23:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6252:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6258:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6248:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6248:15:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6240:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6013:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6024:4:25",
                "type": ""
              }
            ],
            "src": "5962:308:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6335:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6346:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6362:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6356:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6346:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6318:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6328:6:25",
                "type": ""
              }
            ],
            "src": "6276:99:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6477:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6494:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6499:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6487:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6487:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6515:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6534:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6539:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6530:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6530:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6515:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6449:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6454:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6465:11:25",
                "type": ""
              }
            ],
            "src": "6381:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6601:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6611:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6640:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6622:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6622:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6611:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6583:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6593:7:25",
                "type": ""
              }
            ],
            "src": "6556:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6700:48:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6710:32:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6735:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6728:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6728:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6721:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6721:21:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6710:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6682:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6692:7:25",
                "type": ""
              }
            ],
            "src": "6658:90:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6799:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6809:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6824:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6831:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6820:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6820:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6809:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6781:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6791:7:25",
                "type": ""
              }
            ],
            "src": "6754:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6931:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6941:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6952:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6941:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6913:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6923:7:25",
                "type": ""
              }
            ],
            "src": "6886:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7020:103:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "7043:3:25"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "7048:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7053:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "7030:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7030:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7030:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "7101:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7106:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7097:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7097:16:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7115:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7090:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:27:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7090:27:25"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7002:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7007:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7012:6:25",
                "type": ""
              }
            ],
            "src": "6969:154:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7178:258:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7188:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7197:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7192:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7257:63:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7282:3:25"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7287:1:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7278:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7278:11:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7301:3:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7306:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7297:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7297:11:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7291:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7291:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7271:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7271:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7271:39:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7218:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7221:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7215:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7215:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7229:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7231:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7240:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7243:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7236:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7236:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7231:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7211:3:25",
                    "statements": []
                  },
                  "src": "7207:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7354:76:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7404:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7409:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7400:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7400:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7418:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7393:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7393:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7393:27:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7335:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7338:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7332:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7332:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7329:2:25"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7160:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7165:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7170:6:25",
                "type": ""
              }
            ],
            "src": "7129:307:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7485:238:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7495:58:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7517:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7547:4:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7525:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7525:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7513:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7513:40:25"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7499:10:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7664:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7666:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7666:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7666:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7607:10:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7619:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7604:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7604:34:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7643:10:25"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7655:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7640:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7640:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7601:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7601:62:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7598:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7702:2:25",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7706:10:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7695:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7695:22:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7695:22:25"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7471:6:25",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7479:4:25",
                "type": ""
              }
            ],
            "src": "7442:281:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7757:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7774:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7777:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7767:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7767:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7767:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7871:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7874:4:25",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7864:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7864:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7864:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7895:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7898:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7888:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7888:15:25"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7729:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7963:54:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7973:38:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7991:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7998:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7987:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7987:14:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8007:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8003:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8003:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7983:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7983:28:25"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7973:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7946:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7956:6:25",
                "type": ""
              }
            ],
            "src": "7915:102:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8129:119:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8151:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8159:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8147:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8147:14:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8163:34:25",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8140:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8140:58:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8140:58:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8219:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8227:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8215:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8215:15:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8232:8:25",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8208:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8208:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8208:33:25"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8121:6:25",
                "type": ""
              }
            ],
            "src": "8023:225:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8360:76:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8382:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8390:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8378:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8378:14:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8394:34:25",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8371:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:58:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8371:58:25"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8352:6:25",
                "type": ""
              }
            ],
            "src": "8254:182:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8485:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8542:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8551:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8554:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8544:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8544:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8544:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8508:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8533:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8515:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8515:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8505:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8505:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8498:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8495:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8478:5:25",
                "type": ""
              }
            ],
            "src": "8442:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8610:76:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8664:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8673:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8676:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8666:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8666:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8666:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8633:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8655:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8640:14:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8640:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8630:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8630:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8623:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8623:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8620:2:25"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8603:5:25",
                "type": ""
              }
            ],
            "src": "8570:116:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8735:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8792:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8801:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8804:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8794:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8794:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8794:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8758:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8783:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8765:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8765:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8755:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8755:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8748:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8748:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8745:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8728:5:25",
                "type": ""
              }
            ],
            "src": "8692:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "82:1154:1:-:0;;;177:322;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:6;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;377:7:1;359;;:26;;;;;;;;;;;;;;;;;;420:15;437:27;466:24;405:86;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;396:6;;:95;;;;;;;;;;;;;;;;;;177:322;;;;82:1154;;586:96:19;639:7;665:10;658:17;;586:96;:::o;82:1154:1:-;;;;;;;;:::o;7:143:25:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;;;;;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:118::-;1151:24;1169:5;1151:24;:::i;:::-;1146:3;1139:37;1129:53;;:::o;1188:442::-;;1375:2;1364:9;1360:18;1352:26;;1388:71;1456:1;1445:9;1441:17;1432:6;1388:71;:::i;:::-;1469:72;1537:2;1526:9;1522:18;1513:6;1469:72;:::i;:::-;1551;1619:2;1608:9;1604:18;1595:6;1551:72;:::i;:::-;1342:288;;;;;;:::o;1636:96::-;;1702:24;1720:5;1702:24;:::i;:::-;1691:35;;1681:51;;;:::o;1738:126::-;;1815:42;1808:5;1804:54;1793:65;;1783:81;;;:::o;1870:77::-;;1936:5;1925:16;;1915:32;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:2;;2065:1;2062;2055:12;2006:2;1996:79;:::o;2081:122::-;2154:24;2172:5;2154:24;:::i;:::-;2147:5;2144:35;2134:2;;2193:1;2190;2183:12;2134:2;2124:79;:::o;82:1154:1:-;;;;;;;",
  "deployedSourceMap": "82:1154:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:6;;;:::i;:::-;;1095:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:180:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;950:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;699:115:1;756:15;798:7;;;;;;;;;;;783:23;;699:115;:::o;826:112::-;882:14;923:6;;;;;;;;;;;908:22;;826:112;:::o;1700:145:6:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1095:132:1:-;1161:13;1193:6;;;;;;;;;;;:16;;;1210:8;1193:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1186:33;;1095:132;;;:::o;1068:85:6:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;507:180:1:-;578:11;592:7;;;;;;;;;;;:17;;;610:10;622;592:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;578:55;;644:6;;;;;;;;;;;:15;;;660:10;672:6;644:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;507:180;;:::o;950:133::-;1016:13;1048:7;;;;;;;;;;;:17;;;1066:8;1048:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1041:34;;950:133;;;:::o;1994:240:6:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:19:-;639:7;665:10;658:17;;586:96;:::o;7:345:25:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;503:137::-;;588:6;582:13;573:22;;604:30;628:5;604:30;:::i;:::-;563:77;;;;:::o;660:273::-;;765:3;758:4;750:6;746:17;742:27;732:2;;783:1;780;773:12;732:2;823:6;810:20;848:79;923:3;915:6;908:4;900:6;896:17;848:79;:::i;:::-;839:88;;722:211;;;;;:::o;939:143::-;;1027:6;1021:13;1012:22;;1043:33;1070:5;1043:33;:::i;:::-;1002:80;;;;:::o;1088:262::-;;1196:2;1184:9;1175:7;1171:23;1167:32;1164:2;;;1212:1;1209;1202:12;1164:2;1255:1;1280:53;1325:7;1316:6;1305:9;1301:22;1280:53;:::i;:::-;1270:63;;1226:117;1154:196;;;;:::o;1356:278::-;;1472:2;1460:9;1451:7;1447:23;1443:32;1440:2;;;1488:1;1485;1478:12;1440:2;1531:1;1556:61;1609:7;1600:6;1589:9;1585:22;1556:61;:::i;:::-;1546:71;;1502:125;1430:204;;;;:::o;1640:375::-;;1758:2;1746:9;1737:7;1733:23;1729:32;1726:2;;;1774:1;1771;1764:12;1726:2;1845:1;1834:9;1830:17;1817:31;1875:18;1867:6;1864:30;1861:2;;;1907:1;1904;1897:12;1861:2;1935:63;1990:7;1981:6;1970:9;1966:22;1935:63;:::i;:::-;1925:73;;1788:220;1716:299;;;;:::o;2021:284::-;;2140:2;2128:9;2119:7;2115:23;2111:32;2108:2;;;2156:1;2153;2146:12;2108:2;2199:1;2224:64;2280:7;2271:6;2260:9;2256:22;2224:64;:::i;:::-;2214:74;;2170:128;2098:207;;;;:::o;2311:118::-;2398:24;2416:5;2398:24;:::i;:::-;2393:3;2386:37;2376:53;;:::o;2435:364::-;;2551:39;2584:5;2551:39;:::i;:::-;2606:71;2670:6;2665:3;2606:71;:::i;:::-;2599:78;;2686:52;2731:6;2726:3;2719:4;2712:5;2708:16;2686:52;:::i;:::-;2763:29;2785:6;2763:29;:::i;:::-;2758:3;2754:39;2747:46;;2527:272;;;;;:::o;2805:366::-;;2968:67;3032:2;3027:3;2968:67;:::i;:::-;2961:74;;3044:93;3133:3;3044:93;:::i;:::-;3162:2;3157:3;3153:12;3146:19;;2951:220;;;:::o;3177:366::-;;3340:67;3404:2;3399:3;3340:67;:::i;:::-;3333:74;;3416:93;3505:3;3416:93;:::i;:::-;3534:2;3529:3;3525:12;3518:19;;3323:220;;;:::o;3549:118::-;3636:24;3654:5;3636:24;:::i;:::-;3631:3;3624:37;3614:53;;:::o;3673:222::-;;3804:2;3793:9;3789:18;3781:26;;3817:71;3885:1;3874:9;3870:17;3861:6;3817:71;:::i;:::-;3771:124;;;;:::o;3901:423::-;;4080:2;4069:9;4065:18;4057:26;;4093:71;4161:1;4150:9;4146:17;4137:6;4093:71;:::i;:::-;4211:9;4205:4;4201:20;4196:2;4185:9;4181:18;4174:48;4239:78;4312:4;4303:6;4239:78;:::i;:::-;4231:86;;4047:277;;;;;:::o;4330:332::-;;4489:2;4478:9;4474:18;4466:26;;4502:71;4570:1;4559:9;4555:17;4546:6;4502:71;:::i;:::-;4583:72;4651:2;4640:9;4636:18;4627:6;4583:72;:::i;:::-;4456:206;;;;;:::o;4668:419::-;;4872:2;4861:9;4857:18;4849:26;;4921:9;4915:4;4911:20;4907:1;4896:9;4892:17;4885:47;4949:131;5075:4;4949:131;:::i;:::-;4941:139;;4839:248;;;:::o;5093:419::-;;5297:2;5286:9;5282:18;5274:26;;5346:9;5340:4;5336:20;5332:1;5321:9;5317:17;5310:47;5374:131;5500:4;5374:131;:::i;:::-;5366:139;;5264:248;;;:::o;5518:222::-;;5649:2;5638:9;5634:18;5626:26;;5662:71;5730:1;5719:9;5715:17;5706:6;5662:71;:::i;:::-;5616:124;;;;:::o;5746:129::-;;5807:20;;:::i;:::-;5797:30;;5836:33;5864:4;5856:6;5836:33;:::i;:::-;5787:88;;;:::o;5881:75::-;;5947:2;5941:9;5931:19;;5921:35;:::o;5962:308::-;;6114:18;6106:6;6103:30;6100:2;;;6136:18;;:::i;:::-;6100:2;6174:29;6196:6;6174:29;:::i;:::-;6166:37;;6258:4;6252;6248:15;6240:23;;6029:241;;;:::o;6276:99::-;;6362:5;6356:12;6346:22;;6335:40;;;:::o;6381:169::-;;6499:6;6494:3;6487:19;6539:4;6534:3;6530:14;6515:29;;6477:73;;;;:::o;6556:96::-;;6622:24;6640:5;6622:24;:::i;:::-;6611:35;;6601:51;;;:::o;6658:90::-;;6735:5;6728:13;6721:21;6710:32;;6700:48;;;:::o;6754:126::-;;6831:42;6824:5;6820:54;6809:65;;6799:81;;;:::o;6886:77::-;;6952:5;6941:16;;6931:32;;;:::o;6969:154::-;7053:6;7048:3;7043;7030:30;7115:1;7106:6;7101:3;7097:16;7090:27;7020:103;;;:::o;7129:307::-;7197:1;7207:113;7221:6;7218:1;7215:13;7207:113;;;7306:1;7301:3;7297:11;7291:18;7287:1;7282:3;7278:11;7271:39;7243:2;7240:1;7236:10;7231:15;;7207:113;;;7338:6;7335:1;7332:13;7329:2;;;7418:1;7409:6;7404:3;7400:16;7393:27;7329:2;7178:258;;;;:::o;7442:281::-;7525:27;7547:4;7525:27;:::i;:::-;7517:6;7513:40;7655:6;7643:10;7640:22;7619:18;7607:10;7604:34;7601:62;7598:2;;;7666:18;;:::i;:::-;7598:2;7706:10;7702:2;7695:22;7485:238;;;:::o;7729:180::-;7777:77;7774:1;7767:88;7874:4;7871:1;7864:15;7898:4;7895:1;7888:15;7915:102;;8007:2;8003:7;7998:2;7991:5;7987:14;7983:28;7973:38;;7963:54;;;:::o;8023:225::-;8163:34;8159:1;8151:6;8147:14;8140:58;8232:8;8227:2;8219:6;8215:15;8208:33;8129:119;:::o;8254:182::-;8394:34;8390:1;8382:6;8378:14;8371:58;8360:76;:::o;8442:122::-;8515:24;8533:5;8515:24;:::i;:::-;8508:5;8505:35;8495:2;;8554:1;8551;8544:12;8495:2;8485:79;:::o;8570:116::-;8640:21;8655:5;8640:21;:::i;:::-;8633:5;8630:32;8620:2;;8676:1;8673;8666:12;8620:2;8610:76;:::o;8692:122::-;8765:24;8783:5;8765:24;:::i;:::-;8758:5;8755:35;8745:2;;8804:1;8801;8794:12;8745:2;8735:79;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport './OpenNFT.sol';\r\nimport './NobelToken.sol';\r\n\r\ncontract NobelMain is Ownable {\r\n    \r\n    OpenNFT litters;\r\n    NobelToken nobels;\r\n    \r\n    constructor (\r\n        address _litter,\r\n        uint _initial_supply,\r\n        uint _minting_allowance_per_call,\r\n        uint _cool_down_time_per_mint\r\n        ) public {\r\n        litters = OpenNFT(_litter);\r\n        nobels = new NobelToken(_initial_supply, _minting_allowance_per_call, _cool_down_time_per_mint);\r\n    }\r\n\r\n    function createNobelLitter(string memory _litterUri) public {\r\n        uint reward = litters.createNFT(msg.sender, _litterUri);\r\n        nobels.transfer(msg.sender, reward);\r\n    }\r\n    \r\n    function getLittersContractAddress() public view returns(address litter_){\r\n        return address(litters);\r\n    }\r\n    \r\n    function getNobelsContractAddress() public view returns(address nobel_){\r\n        return address(nobels);\r\n    }\r\n    \r\n    function getBalanceOfLitter(address _checker) public view returns(uint balance_){\r\n        return litters.balanceOf(_checker);\r\n    }\r\n    \r\n    function getBalanceOfNobels(address _checker) public view returns(uint balance_){\r\n        return nobels.balanceOf(_checker);\r\n    }\r\n    \r\n}",
  "sourcePath": "E:/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelMain.sol",
  "ast": {
    "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelMain.sol",
    "exportedSymbols": {
      "AccessControl": [
        782
      ],
      "AccessControlEnumerable": [
        972
      ],
      "Address": [
        3296
      ],
      "Context": [
        3319
      ],
      "Counters": [
        3380
      ],
      "ERC165": [
        3607
      ],
      "ERC20": [
        1675
      ],
      "ERC20Burnable": [
        1814
      ],
      "ERC20Pausable": [
        1851
      ],
      "ERC20PresetMinterPauser": [
        1987
      ],
      "ERC721": [
        2808
      ],
      "EnumerableSet": [
        4134
      ],
      "IAccessControl": [
        502
      ],
      "IAccessControlEnumerable": [
        804
      ],
      "IERC165": [
        3619
      ],
      "IERC20": [
        1753
      ],
      "IERC721": [
        2924
      ],
      "IERC721Enumerable": [
        2973
      ],
      "IERC721Metadata": [
        3000
      ],
      "IERC721Receiver": [
        2942
      ],
      "NobelMain": [
        148
      ],
      "NobelToken": [
        278
      ],
      "OpenNFT": [
        459
      ],
      "Ownable": [
        1082
      ],
      "Pausable": [
        1174
      ],
      "Strings": [
        3583
      ]
    },
    "id": 149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/OpenNFT.sol",
        "file": "./OpenNFT.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 460,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelToken.sol",
        "file": "./NobelToken.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 279,
        "src": "52:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1082,
              "src": "104:7:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "104:7:1"
          }
        ],
        "contractDependencies": [
          278,
          1082,
          3319
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 148,
        "linearizedBaseContracts": [
          148,
          1082,
          3319
        ],
        "name": "NobelMain",
        "nameLocation": "91:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "litters",
            "nameLocation": "133:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 148,
            "src": "125:15:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OpenNFT_$459",
              "typeString": "contract OpenNFT"
            },
            "typeName": {
              "id": 44,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43,
                "name": "OpenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 459,
                "src": "125:7:1"
              },
              "referencedDeclaration": 459,
              "src": "125:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpenNFT_$459",
                "typeString": "contract OpenNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "nobels",
            "nameLocation": "158:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 148,
            "src": "147:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NobelToken_$278",
              "typeString": "contract NobelToken"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "NobelToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 278,
                "src": "147:10:1"
              },
              "referencedDeclaration": 278,
              "src": "147:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NobelToken_$278",
                "typeString": "contract NobelToken"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "348:151:1",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "litters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "359:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$459",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61,
                          "name": "_litter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "OpenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenNFT_$459_$",
                          "typeString": "type(contract OpenNFT)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "369:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$459",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "src": "359:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OpenNFT_$459",
                      "typeString": "contract OpenNFT"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "359:26:1"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "nobels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$278",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 69,
                          "name": "_initial_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "420:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 70,
                          "name": "_minting_allowance_per_call",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "437:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 71,
                          "name": "_cool_down_time_per_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "466:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "405:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NobelToken_$278_$",
                          "typeString": "function (uint256,uint256,uint256) returns (contract NobelToken)"
                        },
                        "typeName": {
                          "id": 67,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66,
                            "name": "NobelToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "409:10:1"
                          },
                          "referencedDeclaration": 278,
                          "src": "409:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NobelToken_$278",
                            "typeString": "contract NobelToken"
                          }
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$278",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "src": "396:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NobelToken_$278",
                      "typeString": "contract NobelToken"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "396:95:1"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_litter",
                  "nameLocation": "208:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "200:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_initial_supply",
                  "nameLocation": "231:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "226:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_minting_allowance_per_call",
                  "nameLocation": "262:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "257:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_cool_down_time_per_mint",
                  "nameLocation": "305:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "300:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:151:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:1"
            },
            "scope": 148,
            "src": "177:322:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "567:120:1",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "583:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "578:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "578:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "610:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "610:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "_litterUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "622:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 83,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "592:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 371,
                      "src": "592:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory) external returns (uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "578:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "660:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "660:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 95,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "672:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "644:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1288,
                      "src": "644:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "644:35:1"
                }
              ]
            },
            "functionSelector": "b1f35d65",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNobelLitter",
            "nameLocation": "516:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_litterUri",
                  "nameLocation": "548:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "534:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:26:1"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:0:1"
            },
            "scope": 148,
            "src": "507:180:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "772:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 106,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "798:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "790:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "790:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "783:23:1"
                }
              ]
            },
            "functionSelector": "331c62f8",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLittersContractAddress",
            "nameLocation": "708:25:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "litter_",
                  "nameLocation": "764:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "756:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:17:1"
            },
            "scope": 148,
            "src": "699:115:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "897:41:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "923:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      ],
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "915:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "915:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 114,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "908:22:1"
                }
              ]
            },
            "functionSelector": "6a1f94b1",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNobelsContractAddress",
            "nameLocation": "835:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "nobel_",
                  "nameLocation": "890:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "882:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "881:16:1"
            },
            "scope": 148,
            "src": "826:112:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1030:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1066:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 128,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1048:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "1048:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "1041:34:1"
                }
              ]
            },
            "functionSelector": "e968095f",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfLitter",
            "nameLocation": "959:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "986:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "978:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:18:1"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1021:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1016:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:15:1"
            },
            "scope": 148,
            "src": "950:133:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1175:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "1210:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1193:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1267,
                      "src": "1193:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 140,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "1186:33:1"
                }
              ]
            },
            "functionSelector": "78a65fb1",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfNobels",
            "nameLocation": "1104:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1131:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1123:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1122:18:1"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1166:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1161:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:1"
            },
            "scope": 148,
            "src": "1095:132:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 149,
        "src": "82:1154:1"
      }
    ],
    "src": "0:1236:1"
  },
  "legacyAST": {
    "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelMain.sol",
    "exportedSymbols": {
      "AccessControl": [
        782
      ],
      "AccessControlEnumerable": [
        972
      ],
      "Address": [
        3296
      ],
      "Context": [
        3319
      ],
      "Counters": [
        3380
      ],
      "ERC165": [
        3607
      ],
      "ERC20": [
        1675
      ],
      "ERC20Burnable": [
        1814
      ],
      "ERC20Pausable": [
        1851
      ],
      "ERC20PresetMinterPauser": [
        1987
      ],
      "ERC721": [
        2808
      ],
      "EnumerableSet": [
        4134
      ],
      "IAccessControl": [
        502
      ],
      "IAccessControlEnumerable": [
        804
      ],
      "IERC165": [
        3619
      ],
      "IERC20": [
        1753
      ],
      "IERC721": [
        2924
      ],
      "IERC721Enumerable": [
        2973
      ],
      "IERC721Metadata": [
        3000
      ],
      "IERC721Receiver": [
        2942
      ],
      "NobelMain": [
        148
      ],
      "NobelToken": [
        278
      ],
      "OpenNFT": [
        459
      ],
      "Ownable": [
        1082
      ],
      "Pausable": [
        1174
      ],
      "Strings": [
        3583
      ]
    },
    "id": 149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/OpenNFT.sol",
        "file": "./OpenNFT.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 460,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/OpenNFT/contracts/NobelToken.sol",
        "file": "./NobelToken.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 279,
        "src": "52:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1082,
              "src": "104:7:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "104:7:1"
          }
        ],
        "contractDependencies": [
          278,
          1082,
          3319
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 148,
        "linearizedBaseContracts": [
          148,
          1082,
          3319
        ],
        "name": "NobelMain",
        "nameLocation": "91:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "litters",
            "nameLocation": "133:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 148,
            "src": "125:15:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OpenNFT_$459",
              "typeString": "contract OpenNFT"
            },
            "typeName": {
              "id": 44,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43,
                "name": "OpenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 459,
                "src": "125:7:1"
              },
              "referencedDeclaration": 459,
              "src": "125:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpenNFT_$459",
                "typeString": "contract OpenNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "nobels",
            "nameLocation": "158:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 148,
            "src": "147:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NobelToken_$278",
              "typeString": "contract NobelToken"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "NobelToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 278,
                "src": "147:10:1"
              },
              "referencedDeclaration": 278,
              "src": "147:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NobelToken_$278",
                "typeString": "contract NobelToken"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "348:151:1",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "litters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "359:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$459",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61,
                          "name": "_litter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "OpenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenNFT_$459_$",
                          "typeString": "type(contract OpenNFT)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "369:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$459",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "src": "359:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OpenNFT_$459",
                      "typeString": "contract OpenNFT"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "359:26:1"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "nobels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$278",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 69,
                          "name": "_initial_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "420:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 70,
                          "name": "_minting_allowance_per_call",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "437:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 71,
                          "name": "_cool_down_time_per_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "466:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "405:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NobelToken_$278_$",
                          "typeString": "function (uint256,uint256,uint256) returns (contract NobelToken)"
                        },
                        "typeName": {
                          "id": 67,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66,
                            "name": "NobelToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "409:10:1"
                          },
                          "referencedDeclaration": 278,
                          "src": "409:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NobelToken_$278",
                            "typeString": "contract NobelToken"
                          }
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$278",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "src": "396:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NobelToken_$278",
                      "typeString": "contract NobelToken"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "396:95:1"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_litter",
                  "nameLocation": "208:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "200:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_initial_supply",
                  "nameLocation": "231:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "226:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_minting_allowance_per_call",
                  "nameLocation": "262:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "257:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_cool_down_time_per_mint",
                  "nameLocation": "305:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "300:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:151:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:1"
            },
            "scope": 148,
            "src": "177:322:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "567:120:1",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "583:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "578:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "578:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "610:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "610:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "_litterUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "622:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 83,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "592:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 371,
                      "src": "592:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory) external returns (uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "578:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "660:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "660:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 95,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "672:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "644:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1288,
                      "src": "644:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "644:35:1"
                }
              ]
            },
            "functionSelector": "b1f35d65",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNobelLitter",
            "nameLocation": "516:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_litterUri",
                  "nameLocation": "548:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "534:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:26:1"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:0:1"
            },
            "scope": 148,
            "src": "507:180:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "772:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 106,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "798:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "790:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "790:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "783:23:1"
                }
              ]
            },
            "functionSelector": "331c62f8",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLittersContractAddress",
            "nameLocation": "708:25:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "litter_",
                  "nameLocation": "764:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "756:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:17:1"
            },
            "scope": 148,
            "src": "699:115:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "897:41:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "923:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      ],
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "915:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "915:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 114,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "908:22:1"
                }
              ]
            },
            "functionSelector": "6a1f94b1",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNobelsContractAddress",
            "nameLocation": "835:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "nobel_",
                  "nameLocation": "890:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "882:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "881:16:1"
            },
            "scope": 148,
            "src": "826:112:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1030:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1066:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 128,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1048:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$459",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "1048:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "1041:34:1"
                }
              ]
            },
            "functionSelector": "e968095f",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfLitter",
            "nameLocation": "959:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "986:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "978:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:18:1"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1021:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1016:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:15:1"
            },
            "scope": 148,
            "src": "950:133:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1175:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "1210:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1193:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$278",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1267,
                      "src": "1193:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 140,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "1186:33:1"
                }
              ]
            },
            "functionSelector": "78a65fb1",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfNobels",
            "nameLocation": "1104:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1131:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1123:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1122:18:1"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1166:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1161:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:1"
            },
            "scope": 148,
            "src": "1095:132:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 149,
        "src": "82:1154:1"
      }
    ],
    "src": "0:1236:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x873a41D1e12616BE38DfEE212C2e30a788096808",
      "transactionHash": "0x7050a5651a779f5de51a764e6f93bca844daade2d9a1894199818aa9600cd1f6"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-18T12:22:50.851Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}